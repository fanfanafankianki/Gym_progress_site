Parameters:
  EnvironmentName:
    Type: String
    Default: production
    Description: "A friendly environment name that will be used for namespacing all cluster resources. Example: staging, qa, or production"
    
  LatestECSOptimizedAMI:
    Description: AMI ID
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: "/aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id"
    
  UserData:
    Type: String
    Description: User data required for Launch Template and Spot Fleet
    Default: "#!/bin/bash \necho ECS_CLUSTER=production >> /etc/ecs/ecs.config;"
    
  IamRoleInstanceProfile:
    Type: String
    Description: Specifies the Name or the Amazon Resource Name (ARN) of the instance
      profile associated with the IAM role for the instance
    Default: arn:aws:iam::320442627588:instance-profile/ecsInstanceRole

Resources:
  AppCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref EnvironmentName
      ClusterSettings:
      - Name: containerInsights
        Value: disabled
      Configuration:
        ExecuteCommandConfiguration:
          Logging: DEFAULT
      ServiceConnectDefaults:
        Namespace: production
      Tags: []
      
  ECSLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    DependsOn: AppCluster
    Properties:
      LaunchTemplateData:
        ImageId:
          Ref: LatestECSOptimizedAMI
        InstanceType: t2.micro
        IamInstanceProfile:
          Arn: !Ref IamRoleInstanceProfile
        UserData:
          Fn::Base64:
            Ref: UserData

  UbuntuTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: UbuntuContainer
      RequiresCompatibilities:
        - EC2 
      Cpu: 1024
      Memory: 982
      NetworkMode: awsvpc
      ContainerDefinitions:
        - Name: UbuntuContainer
          Image: 320442627588.dkr.ecr.eu-west-1.amazonaws.com/jenkins_repo:latest
          PortMappings:
            - ContainerPort: 80
          Environment:
            - Name: MARIADB_PORT
              Value: "3306"
            - Name: MEMCACHED_PORT
              Value: "11211"
          Essential: true

  UbuntuService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: UbuntuService
      Cluster: !Ref AppCluster
      LaunchType: EC2
      TaskDefinition: !Ref UbuntuTaskDefinition
      DesiredCount: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - Fn::ImportValue: MyPublicSubnet1Id
          SecurityGroups:
            - Fn::ImportValue: MySecurityGroupId
            
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - Fn::ImportValue: MyPublicSubnet1Id
      LaunchTemplate:
        LaunchTemplateId:
          Ref: ECSLaunchTemplate
        Version:
          Fn::GetAtt:
          - ECSLaunchTemplate
          - LatestVersionNumber
      MinSize: 1
      MaxSize: 1
      DesiredCapacity: 1
    UpdatePolicy:
      AutoScalingReplacingUpdate:
        WillReplace: true

  MyCapacityProvider:
    Type: "AWS::ECS::CapacityProvider"
    Properties:
      Name: MyCustomCapacityProvider    
      AutoScalingGroupProvider:
        AutoScalingGroupArn: !Ref AutoScalingGroup
        ManagedScaling:
          Status: ENABLED
        ManagedTerminationProtection: DISABLED

  ECSUpdateCapacityProvider:
    Type: AWS::ECS::ClusterCapacityProviderAssociations
    Properties:
      Cluster: !Ref AppCluster
      CapacityProviders:
        - !Ref MyCapacityProvider
      DefaultCapacityProviderStrategy:
        - Base: 1
          Weight: 1
          CapacityProvider: !Ref MyCapacityProvider

Outputs:
  ClusterName:
    Description: The name of the ECS cluster
    Value: !Ref AppCluster
    Export:
      Name: !Sub ${EnvironmentName}:ClusterName

  UbuntuService:
    Description: The ID of the created Ubuntu Service
    Value: !Ref UbuntuService
    Export:
      Name: UbuntuService
